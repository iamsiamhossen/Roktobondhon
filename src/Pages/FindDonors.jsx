import { useState } from "react";

const FindDonors = () => {
  // Dummy Donor Data (ржкрж░ржмрж░рзНрждрзАрждрзЗ API ржерзЗржХрзЗ ржЖржирж╛ рж╣ржмрзЗ)
  const donors = [
    { id: 1, name: "рж░рж╛рж╣рж┐ржо", bloodGroup: "A+", location: "ржврж╛ржХрж╛", available: true, lastDonation: "2024-01-15" },
    { id: 2, name: "ржХрж░рж┐ржо", bloodGroup: "O-", location: "ржЪржЯрзНржЯржЧрзНрж░рж╛ржо", available: false, lastDonation: "2023-12-20" },
    { id: 3, name: "рж╕рзБржорж╛ржЗрзЯрж╛", bloodGroup: "B+", location: "рж╕рж┐рж▓рзЗржЯ", available: true, lastDonation: "2024-02-05" },
    { id: 4, name: "ржирзБрж╕рж░рж╛ржд", bloodGroup: "AB-", location: "ржЦрзБрж▓ржирж╛", available: true, lastDonation: "2024-01-10" },
  ];

  // рж╕рж╛рж░рзНржЪ ржПржмржВ ржлрж┐рж▓рзНржЯрж╛рж░ рж╕рзНржЯрзЗржЯ
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedBloodGroup, setSelectedBloodGroup] = useState("");
  const [selectedLocation, setSelectedLocation] = useState("");
  const [onlyAvailable, setOnlyAvailable] = useState(false);

  // ржЗржЙржирж┐ржХ ржмрзНрж▓рж╛ржб ржЧрзНрж░рзБржк ржПржмржВ рж▓рзЛржХрзЗрж╢ржи ржлрж┐рж▓рзНржЯрж╛рж░
  const bloodGroups = [...new Set(donors.map((donor) => donor.bloodGroup))];
  const locations = [...new Set(donors.map((donor) => donor.location))];

  // ржлрж┐рж▓рзНржЯрж╛рж░ржб ржбрзЛржирж░ рж▓рж┐рж╕рзНржЯ
  const filteredDonors = donors.filter((donor) => {
    return (
      (donor.name.toLowerCase().includes(searchQuery.toLowerCase()) || donor.bloodGroup.includes(searchQuery)) &&
      (selectedBloodGroup ? donor.bloodGroup === selectedBloodGroup : true) &&
      (selectedLocation ? donor.location === selectedLocation : true) &&
      (!onlyAvailable || donor.available)
    );
  });

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <h1 className="text-3xl font-bold text-center text-red-600">рж░ржХрзНржд ржжрж╛рждрж╛ ржЦрзБржБржЬрзБржи</h1>
      <p className="text-center text-gray-700 mt-2">ржЖржкржирж╛рж░ ржПрж▓рж╛ржХрж╛рж░ рж░ржХрзНржд ржжрж╛рждрж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи</p>

      {/* рж╕рж╛рж░рзНржЪ ржПржмржВ ржлрж┐рж▓рзНржЯрж╛рж░ */}
      <div className="mt-6 flex flex-wrap gap-4 justify-center">
        {/* рж╕рж╛рж░рзНржЪ ржЗржиржкрзБржЯ */}
        <input
          type="text"
          placeholder="ржирж╛ржо ржмрж╛ рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк ржжрж┐рзЯрзЗ рж╕рж╛рж░рзНржЪ ржХрж░рзБржи..."
          className="p-2 border rounded-lg w-64"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
        />

        {/* рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк ржлрж┐рж▓рзНржЯрж╛рж░ */}
        <select className="p-2 border rounded-lg" value={selectedBloodGroup} onChange={(e) => setSelectedBloodGroup(e.target.value)}>
          <option value="">рж╕ржм рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк</option>
          {bloodGroups.map((group) => (
            <option key={group} value={group}>{group}</option>
          ))}
        </select>

        {/* рж▓рзЛржХрзЗрж╢ржи ржлрж┐рж▓рзНржЯрж╛рж░ */}
        <select className="p-2 border rounded-lg" value={selectedLocation} onChange={(e) => setSelectedLocation(e.target.value)}>
          <option value="">рж╕ржм рж▓рзЛржХрзЗрж╢ржи</option>
          {locations.map((loc) => (
            <option key={loc} value={loc}>{loc}</option>
          ))}
        </select>

        {/* ржЕрзНржпрж╛ржнрзЗрж▓рзЗржмрж┐рж▓рж┐ржЯрж┐ ржЯржЧрж▓ */}
        <label className="flex items-center space-x-2">
          <input type="checkbox" checked={onlyAvailable} onChange={() => setOnlyAvailable(!onlyAvailable)} />
          <span>рж╢рзБржзрзБржорж╛рждрзНрж░ ржЕрзНржпрж╛ржнрзЗрж▓рзЗржмрж▓ ржжрж╛рждрж╛рж░рж╛</span>
        </label>
      </div>

      {/* ржбрзЛржирж░ рж▓рж┐рж╕рзНржЯ */}
      <div className="mt-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredDonors.length > 0 ? (
          filteredDonors.map((donor) => (
            <div key={donor.id} className="p-4 bg-white shadow rounded-lg">
              <h2 className="text-xl font-semibold">{donor.name}</h2>
              <p className="text-red-500 font-bold">{donor.bloodGroup}</p>
              <p className="text-gray-700">ЁЯУН {donor.location}</p>
              <p className={`mt-2 font-semibold ${donor.available ? "text-green-500" : "text-red-500"}`}>
                {donor.available ? "ржЕрзНржпрж╛ржнрзЗрж▓рзЗржмрж▓ тЬЕ" : "ржЕрзНржпрж╛ржнрзЗрж▓рзЗржмрж▓ ржирзЯ тЭМ"}
              </p>
              <p className="text-sm text-gray-500">ЁЯй╕ рж╢рзЗрж╖ ржжрж╛ржи: {donor.lastDonation}</p>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-500 mt-4">ржХрзЛржирзЛ ржжрж╛рждрж╛ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐!</p>
        )}
      </div>
    </div>
  );
};

export default FindDonors;
